<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="using:Uno.Gallery.Views.Styles.Application"
					xmlns:material="using:Uno.Material">

	<ResourceDictionary.ThemeDictionaries>

		<!-- Light Theme -->
		<ResourceDictionary x:Key="Light">

			<!-- Not a color but we needed 2 different images for light and dark theme -->
			<x:String x:Key="UnoLogoImageSource">ms-appx:///Assets/UnoGalleryLogo_Light.png</x:String>

			<x:String x:Key="OverviewImageSource">ms-appx:///Assets/uno-banner-light.png</x:String>
		</ResourceDictionary>

		<!-- Dark Theme -->
		<ResourceDictionary x:Key="Dark">

			<!-- Override the default dark Material background and surface colors -->
			<Color x:Key="MaterialBackgroundColor">#222224</Color>
			<Color x:Key="MaterialSurfaceColor">#252529</Color>

			<!-- Not a color but we needed 2 different images for light and dark theme -->
			<x:String x:Key="UnoLogoImageSource">ms-appx:///Assets/UnoGalleryLogo_Dark.png</x:String>

			<x:String x:Key="OverviewImageSource">ms-appx:///Assets/uno-banner-dark.png</x:String>
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>

	<!-- 
		note: beside theme color overrides, any resource referencing material colors
		SHOULD NOT be declared in a ResourceDictionary imported directly from App.xaml.
		Since they will be loaded before material color palette, and have a transparent color instead.

		ex: <SolidColorBrush x:Key="..." Color="{ThemeResource Material...}" />
	-->

	<SolidColorBrush x:Key="DividerBrush"
					 Color="{ThemeResource MaterialOnSurfaceColor}"
					 Opacity="0.13" />

	<SolidColorBrush x:Key="SampleSecondBackgroundBrush"
					 Color="{ThemeResource MaterialOnSurfaceColor}"
					 Opacity="0.05" />

	<SolidColorBrush x:Key="ApplicationPageBackgroundThemeBrush"
					 Color="{ThemeResource MaterialBackgroundColor}" />

	<!-- Opacity for text -->
	<x:Double x:Key="Opacity01">1</x:Double>
	<x:Double x:Key="Opacity02">0.8</x:Double>
	<x:Double x:Key="Opacity03">0.6</x:Double>
	<x:Double x:Key="Opacity04">0.45</x:Double>
	<x:Double x:Key="Opacity05">0.2</x:Double>

	<Color x:Key="UnoBlueColor">#FF229DFC</Color>
	<Color x:Key="UnoPurpleColor">#FF7A69F5</Color>
	<Color x:Key="UnoGreenColor">#FF6CE5AE</Color>
	<Color x:Key="UnoRedColor">#FFF65678</Color>

	<SolidColorBrush x:Key="UnoBlueColorBrush"
					 Color="{StaticResource UnoBlueColor}" />

	<SolidColorBrush x:Key="UnoPurpleColorBrush"
					 Color="{StaticResource UnoPurpleColor}" />

	<SolidColorBrush x:Key="UnoGreenColorBrush"
					 Color="{StaticResource UnoGreenColor}" />

	<SolidColorBrush x:Key="UnoRedColorBrush"
					 Color="{StaticResource UnoRedColor}" />

	<!-- 
		The foregrounds brushes are used on Material TextBlock styles from Uno.Material 
		They differe mostly on Opacity.
	-->
	<SolidColorBrush x:Key="Foreground01ColorBrush"
					 Color="{ThemeResource MaterialOnBackgroundColor}"
					 Opacity="{StaticResource Opacity01}"  />

	<SolidColorBrush x:Key="Foreground02ColorBrush"
					 Color="{ThemeResource MaterialOnBackgroundColor}"
					 Opacity="{StaticResource Opacity02}"  />
	
	<SolidColorBrush x:Key="Foreground03ColorBrush"
					 Color="{ThemeResource MaterialOnBackgroundColor}"
					 Opacity="{StaticResource Opacity03}"  />
	
	<SolidColorBrush x:Key="Foreground04ColorBrush"
					 Color="{ThemeResource MaterialOnBackgroundColor}"
					 Opacity="{StaticResource Opacity04}"  />
	
	<SolidColorBrush x:Key="Foreground05ColorBrush"
					 Color="{ThemeResource MaterialOnBackgroundColor}"
					 Opacity="{StaticResource Opacity05}"  />

</ResourceDictionary>
